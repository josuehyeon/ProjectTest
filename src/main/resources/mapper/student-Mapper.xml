<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- 모든 SQL문을 mapper태그 안에 작성 -->
<mapper namespace="studentMapper">

	<resultMap type="com.kh.project.stuInfo.vo.StudentVO" id="student">
		<id 	column="STU_NO" 	property="stuNo" />
		<result column="STU_NAME" 	property="stuName" />
		<result column="COLL_NO" 	property="collNo" />
		<result column="MAJOR_CODE" property="majorCode" />
		<result column="MINOR_CODE" property="minorCode" />
		<result column="STU_YEAR" 	property="stuYear" />
		<result column="STU_SEM" 	property="stuSem" />
		<result column="STU_STATUS" property="stuStatus" />
		<result column="MAJOR_NAME" property="majorName" />
		<result column="MINOR_NAME" property="minorName" />
		<result column="YELLOW_CNT" property="yellowCnt" />
		<association property="memberInfo" resultMap="memberMapper.member"/>
		<association property="collegeInfo" resultMap="collegeMapper.college"/>
		<association property="deptInfo" resultMap="deptMapper.dept"/>
		<association property="editStatusInfo" resultMap="editStatusMapper.editStatus"/>
	</resultMap>
	
	<select id="selectStuMyInfo" resultMap="student">
		SELECT   STU_NO
			  , (SELECT COLL_NAME FROM COLLEGE WHERE COLL_NO = S.COLL_NO) AS COLL_NAME
			  , (SELECT DEPT_NAME FROM DEPT WHERE DEPT_ID= S.MAJOR_CODE) AS MAJOR_CODE
              , (SELECT DEPT_NAME FROM DEPT WHERE DEPT_ID = S.MINOR_CODE) AS MINOR_CODE
			  ,  STU_YEAR
			  ,  STU_SEM 
			  ,  STU_STATUS             
		FROM     STUDENT S , COLLEGE C , DEPT D
		WHERE    S.COLL_NO = C.COLL_NO
		AND      S.MAJOR_CODE = D.DEPT_ID
		AND      STU_NO = #{stuNo}
	</select>
	
	<select id="selectMyInfoForGraduation" resultMap="student">
		SELECT  S.STU_NO
			  , M.MEM_NAME
			  , S.STU_YEAR
			  , (SELECT COLL_NAME FROM COLLEGE WHERE COLL_NO = S.COLL_NO) AS COLL_NAME
			  , (SELECT DEPT_NAME FROM DEPT WHERE DEPT_ID= S.MAJOR_CODE) AS MAJOR_CODE
              , (SELECT DEPT_NAME FROM DEPT WHERE DEPT_ID = S.MINOR_CODE) AS MINOR_CODE
		FROM  MEMBER M,  STUDENT S, COLLEGE C, DEPT D
		WHERE M.MEM_NO = S.STU_NO
		AND   S.COLL_NO = C.COLL_NO
		AND   S.MAJOR_CODE = D.DEPT_ID
		AND   S.STU_NO = #{memNo} 
	</select>	
	
	<select id="selectStudentList" resultMap="student">
		SELECT   STU_NO
			  , (SELECT COLL_NAME FROM COLLEGE WHERE COLL_NO = S.COLL_NO) AS COLL_NAME
			  , (SELECT DEPT_NAME FROM DEPT WHERE DEPT_ID= S.MAJOR_CODE) AS MAJOR_CODE
              , (SELECT DEPT_NAME FROM DEPT WHERE DEPT_ID = S.MINOR_CODE) AS MINOR_CODE
			  ,  STU_YEAR
			  ,  STU_SEM 
			  ,  STU_STATUS             
		FROM     STUDENT S , COLLEGE C , DEPT D
		WHERE    S.COLL_NO = C.COLL_NO
		AND      S.MAJOR_CODE = D.DEPT_ID
	</select>
	
	<select id="goStopStudy" resultMap="student">
		SELECT M.MEM_NAME
			, C.COLL_NAME
			, S.STU_YEAR
			, D.DEPT_NAME
			, (SELECT DEPT_NAME FROM DEPT WHERE DEPT_ID = S.MINOR_CODE) AS MINOR_CODE
			, TO_CHAR(M.MEM_BIRTH, 'YYYY/MM/DD') AS MEM_BIRTH
			, S.STU_STATUS
			, S.STU_NO			
		FROM STUDENT S , MEMBER M, COLLEGE C, DEPT D
		WHERE S.MEM_NO = M.MEM_NO
		AND S.COLL_NO = C.COLL_NO
		AND S.MAJOR_CODE = D.DEPT_ID
		AND S.STU_NO = #{stuNo}
	</select>
	
	<!-- 복학 -->
	<select id="goAgainStudy" resultMap="student">
		SELECT M.MEM_NAME
			, C.COLL_NAME
			, S.STU_YEAR
			, D.DEPT_NAME
			, (SELECT DEPT_NAME FROM DEPT WHERE DEPT_ID = S.MINOR_CODE) AS MINOR_CODE
			, TO_CHAR(M.MEM_BIRTH, 'YYYY/MM/DD') AS MEM_BIRTH
			, S.STU_STATUS
			, S.STU_NO			
		FROM STUDENT S , MEMBER M, COLLEGE C, DEPT D
		WHERE S.MEM_NO = M.MEM_NO
		AND S.COLL_NO = C.COLL_NO
		AND S.MAJOR_CODE = D.DEPT_ID
		AND S.STU_NO = #{stuNo}
	</select>
	
	<!-- 자퇴 -->
	<select id="goExitStudy" resultMap="student">
		SELECT M.MEM_NAME
			, C.COLL_NAME
			, S.STU_YEAR
			, D.DEPT_NAME
			, (SELECT DEPT_NAME FROM DEPT WHERE DEPT_ID = S.MINOR_CODE) AS MINOR_CODE
			, TO_CHAR(M.MEM_BIRTH, 'YYYY/MM/DD') AS MEM_BIRTH
			, S.STU_STATUS
			, S.STU_NO			
		FROM STUDENT S , MEMBER M, COLLEGE C, DEPT D
		WHERE S.MEM_NO = M.MEM_NO
		AND S.COLL_NO = C.COLL_NO
		AND S.MAJOR_CODE = D.DEPT_ID
		AND S.STU_NO = #{stuNo}
	</select>
	
	<insert id="insertStopStudy">
		INSERT INTO EDIT_STATUS (
			EDIT_NO
		    , STU_NO
		   	, NOW_STATUS
		   	, AFTER_STATUS
		) VALUES (
			(SELECT NVL(MAX(EDIT_NO) + 1, 1) FROM EDIT_STATUS)
			, #{stuNo}
			, (SELECT STU_STATUS FROM STUDENT WHERE STU_NO = #{stuNo})
			, '휴학'
		)
	</insert>
	
	<!-- 복학 -->
	<insert id="insertAgainStudy">
		INSERT INTO EDIT_STATUS (
			EDIT_NO
		    , STU_NO
		   	, NOW_STATUS
		   	, AFTER_STATUS
		) VALUES (
			(SELECT NVL(MAX(EDIT_NO) + 1, 1) FROM EDIT_STATUS)
			, #{stuNo}
			, (SELECT STU_STATUS FROM STUDENT WHERE STU_NO = #{stuNo})
			, '복학'
		)
	</insert>
	
	<!-- 자퇴 -->
	<insert id="insertExitStudy">
		INSERT INTO EDIT_STATUS (
			EDIT_NO
		    , STU_NO
		   	, NOW_STATUS
		   	, AFTER_STATUS
		) VALUES (
			(SELECT NVL(MAX(EDIT_NO) + 1, 1) FROM EDIT_STATUS)
			, #{stuNo}
			, (SELECT STU_STATUS FROM STUDENT WHERE STU_NO = #{stuNo})
			, '자퇴'
		)
	</insert>
	
	<!-- 승인대기인 정보가 있는지 조회 -->
	<!-- 승인대기인 데이터가 0개 일때만 신청 가능 -->
	<select id="selectWaitCntStop" resultType="int">
		SELECT COUNT(EDIT_NO)
		FROM EDIT_STATUS
		WHERE STU_NO = #{stuNo}
		AND ING_STATUS = '승인대기'
	</select>
	
	<!-- 복학 -->
	<!-- 승인대기인 정보가 있는지 조회 -->
	<!-- 승인대기인 데이터가 0개 일때만 신청 가능 -->
	<select id="selectWaitCntAgain" resultType="int">
		SELECT COUNT(EDIT_NO)
		FROM EDIT_STATUS
		WHERE STU_NO = #{stuNo}
		AND ING_STATUS = '승인대기'
	</select>
	
	<!-- 자퇴-->
	<!-- 승인대기인 정보가 있는지 조회 -->
	<!-- 승인대기인 데이터가 0개 일때만 신청 가능 -->
	<select id="selectWaitCntExit" resultType="int">
		SELECT COUNT(EDIT_NO)
		FROM EDIT_STATUS
		WHERE STU_NO = #{stuNo}
		AND ING_STATUS = '승인대기'
	</select>
	


	

</mapper>












