<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- 모든 SQL문을 mapper태그 안에 작성 -->
<mapper namespace="lectureMapper">
	<resultMap type="com.kh.project.lecture.vo.LectureVO" id="lecture">
		<id column="LEC_ID" property="lecId"/>
		<result column="LEC_NAME" property="lecName"/>
		<result column="LEC_CREDIT" property="lecCredit"/>
		<result column="COLL_NO" property="collNo"/>
		<result column="DEPT_ID" property="deptId"/>
		<result column="PROF_NO" property="profNo"/>
		<result column="ASSI_NO" property="assiNo"/>
		<result column="CREATE_DATE" property="createDate"/>
		<result column="MAX_NO" property="maxNo"/>
		<result column="NOW_NO" property="nowNo"/>
		<result column="LEC_PLAN" property="lecPlan"/>
		<association property="pdfVO" resultMap="pdf"></association>
	</resultMap>
	
		<!-- 강의 시간표 테스트용 임시 -->
	<resultMap type="com.kh.project.lecture.vo.TimetableViewVO" id="timetableView">
		<result column="ENROLMENT_ID" 			property="enrolmentId"/>
		<result column="LEC_ID" 				property="lecId"/>
		<result column="LEC_NAME" 				property="lecName"/>
		<result column="LEC_DAY" 				property="lecDay"/>
		<result column="LEC_PERIOD" 			property="lecPeriod"/>
		<result column="LEC_CREDIT" 			property="lecCredit"/>
		<result column="STU_NO" 				property="stuNo"/>
	</resultMap>	
	
	<resultMap type="com.kh.project.lecture.vo.LectureViewVO" id="lectureView">
		<id column="LEC_NAME" property="lecName"/>
		<result column="LEC_CREDIT" property="lecCredit"/>
		<result column="COLL_NO" property="collNo"/>
		<result column="DEPT_ID" property="deptId"/>
		<result column="PROF_NO" property="profNo"/>
		<result column="ASSI_NO" property="assiNo"/>
		<result column="MAX_NO" property="maxNo"/>
		<result column="NOW_NO" property="nowNo"/>
		<result column="LEC_PLAN" property="lecPlan"/>
		<result column="PROF_NAME" property="profName"/>
		<result column="ASSI_NAME" property="assiName"/>
		<result column="DEPT_NAME" property="deptName"/>
		<result column="LEC_ID" property="lecId"/>
		<result column="COLL_NAME" property="collName"/>
		<result column="LEC_DAY" property="lecDay"/>
		<result column="LEC_PERIOD" property="lecPeriod"/>
		<result column="ROW_NUM" 			property="rowNum"/>
	</resultMap>
	
	<resultMap type="com.kh.project.lecture.vo.PdfVO" id="pdf">
		<id column="PDF_CODE" property="pdfCode"/>
		<result column="ORIGIN_PDF_NAME" property="originPdfName"/>
		<result column="ATTACHED_PDF_NAME" property="attachedPdfName"/>
		<result column="LEC_ID" property="lecId"/>
	</resultMap>
	<resultMap type="com.kh.project.lecture.vo.EnrolmentVO" id="enrolment">
		<id 		column="ENROLMENT_ID" 		property="enrolmentId"/>
		<result 	column="LEC_ID" 			property="lecId"/>
		<result 	column="STU_NO" 			property="stuNo"/>
		<association property="lectureViewVO" 	resultMap="lectureView"/>
	</resultMap>
	
	<insert id="regLecture">
		INSERT INTO LECTURE(
		LEC_ID
			, LEC_NAME
			, LEC_CREDIT
			, COLL_NO
			, DEPT_ID
			, PROF_NO
			, ASSI_NO
			, LEC_PLAN
			, LEC_DAY
			, LEC_PERIOD
		) VALUES (
		(SELECT 'LEC_'||LPAD(NVL(MAX(TO_NUMBER(SUBSTR(LEC_ID, 5, 3))), 0)+1, 3, '0') FROM LECTURE) 
			, #{lecName}
			, #{lecCredit}
			, #{collNo}
			, #{deptId}
			, #{profNo}
			, #{assiNo}
			, #{lecPlan}
			, #{lecDay}
			, #{lecPeriod}
		)
	</insert>
	
	<select id="selectLectureList" resultMap="lectureView">
	SELECT  LEC_NAME
                    , LEC_CREDIT
                    , COLL_NO
                    , DEPT_ID
                    , PROF_NO
                    , ASSI_NO
                    , MAX_NO
                    , NOW_NO
                    , LEC_PLAN
                    , PROF_NAME
                    , ASSI_NAME
                    , DEPT_NAME
                    , LEC_ID
                    , COLL_NAME
                    , LEC_DAY
                    , LEC_PERIOD
		    , ROW_NUM
		FROM
		(
			SELECT  LEC_NAME
                    , LEC_CREDIT
                    , COLL_NO
                    , DEPT_ID
                    , PROF_NO
                    , ASSI_NO
                    , MAX_NO
                    , NOW_NO
                    , LEC_PLAN
                    , PROF_NAME
                    , ASSI_NAME
                    , DEPT_NAME
                    , LEC_ID
                    , COLL_NAME
                    , LEC_DAY
                    , LEC_PERIOD
			    , ROWNUM AS ROW_NUM
			FROM
			(
				SELECT 
                    LEC_NAME
                    , LEC_CREDIT
                    , COLL_NO
                    , DEPT_ID
                    , PROF_NO
                    , ASSI_NO
                    , MAX_NO
                    , NOW_NO
                    , LEC_PLAN
                    , PROF_NAME
                    , ASSI_NAME
                    , DEPT_NAME
                    , LEC_ID
                    , COLL_NAME
                    , LEC_DAY
                    , LEC_PERIOD
                    FROM LECTURE_VIEW
                    WHERE 1 = 1
                     <if test="lecId != null and !lecId.equals('')">
						AND LEC_ID = #{lecId}
					</if>
					<if test="deptId != null and !deptId.equals('')">
				    	AND DEPT_ID LIKE '%'||UPPER(#{deptId})||'%'
				    </if>
                    ORDER BY LEC_ID DESC
			)
		)
		WHERE ROW_NUM &gt;= #{startNum} AND ROW_NUM &lt;= #{endNum}
	
	<!-- 
		SELECT 
		LEC_NAME
		, LEC_CREDIT
		, COLL_NO
		, DEPT_ID
		, PROF_NO
		, ASSI_NO
		, MAX_NO
		, NOW_NO
		, LEC_PLAN
		, PROF_NAME
		, ASSI_NAME
		, DEPT_NAME
		, LEC_ID
		, COLL_NAME
		, LEC_DAY
    	, LEC_PERIOD
		FROM LECTURE_VIEW
		WHERE 1 = 1
		<if test="lecId != null and !lecId.equals('')">
			AND LEC_ID = #{lecId}
		</if>
		<if test="deptId != null and !deptId.equals('')">
	    	AND DEPT_ID LIKE '%'||UPPER(#{deptId})||'%'
	    </if>
		ORDER BY LEC_ID DESC -->
	</select>
	
	<!--페이징 처리를 위한 전체 데이터의 수  -->	
	<select id="totalLecCnt" resultType="int">
		SELECT COUNT(LEC_ID)
		FROM LECTURE_VIEW
		WHERE 1 = 1
        <if test="lecId != null and !lecId.equals('')">
			AND LEC_ID = #{lecId}
		</if>
		<if test="deptId != null and !deptId.equals('')">
	    	AND DEPT_ID LIKE '%'||UPPER(#{deptId})||'%'
	    </if>
	</select>
	
	<delete id="deleteLecture">
		DELETE LECTURE
		WHERE LEC_ID = #{lecId}
	</delete>
	
	<update id="updateLecture">
		UPDATE LECTURE
		SET LEC_NAME = #{lecName}
			, LEC_CREDIT = #{lecCredit}
			, COLL_NO = #{collNo}
			, DEPT_ID = #{deptId}
			, PROF_NO = #{profNo}
			, ASSI_NO = #{assiNo}
			, LEC_DAY = #{lecDay}
    		, LEC_PERIOD = #{lecPeriod}
		WHERE LEC_ID=#{lecId}
	</update>
	
	<select id="selectNextLecId" resultType="String">
		SELECT 'LEC_'||LPAD(NVL(MAX(TO_NUMBER(SUBSTR(LEC_ID, 5, 3))), 0)+1, 3, '0') FROM LECTURE
	</select>
	
	<select id="selectNextNumber" resultType="int">
		SELECT NVL(MAX(TO_NUMBER(SUBSTR(PDF_CODE, 5, 3))), 0)+1 FROM LECTURE_PDF
	</select>
	
	<insert id="insertPdf">
		INSERT INTO LECTURE_PDF (
			PDF_CODE
			, ORIGIN_PDF_NAME
			, ATTACHED_PDF_NAME
			, LEC_ID
		) VALUES (
		 #{pdfVO.pdfCode}
			, #{pdfVO.originPdfName}
			, #{pdfVO.attachedPdfName}
			, #{pdfVO.lecId}
		)
	</insert>
	
	<select id="selectLecPdf" resultMap="pdf">
		SELECT ATTACHED_PDF_NAME
		FROM LECTURE_PDF
		WHERE LEC_ID=#{lecId}
	</select>
	
<!-- 		SELECT   TIME_ID 
        	    ,DAY
            	,TIME_START
            	,TIME
            	,LEC_ROOM
            	,LEC_ID
		FROM     LECTURE_TIME -->
		
	<!-- 강의시간표용 TimetableView만듦 -->
	<select id="selectTimetableList" resultMap="timetableView">
		SELECT ENROLMENT_ID
		      ,LEC_ID
		      ,LEC_NAME
		      ,LEC_DAY
		      ,LEC_PERIOD
		      ,LEC_CREDIT
		      ,STU_NO
		FROM TIMETABLE_VIEW
		WHERE STU_NO = #{stuNo}
	</select>
	
	<insert id="enrolment">
		INSERT INTO ENROLMENT (
			ENROLMENT_ID
			, LEC_ID
			, STU_NO
			, SEM_ID
		) VALUES (
		(SELECT 'ENROL_'||LPAD(NVL(MAX(TO_NUMBER(SUBSTR(ENROLMENT_ID, 7, 3))), 0)+1, 3, '0') FROM ENROLMENT)
			, #{lecId}
			, #{stuNo}
			, (SELECT TO_CHAR(SYSDATE, 'YYYY')||CASE WHEN TO_CHAR(SYSDATE, 'MM') >=7 THEN '2' ELSE '1' END SEM_ID FROM DUAL)
		)
	</insert>
	
	<select id="selectEnrolList" resultMap="enrolment">
		SELECT *
		FROM ENROLMENT EN,  LECTURE_VIEW L
		WHERE L.LEC_ID = EN.LEC_ID
		AND STU_NO=#{memNo}
	</select>
	
	<delete id="deleteEnrolmentOne">
		DELETE FROM ENROLMENT
		WHERE ENROLMENT_ID=#{enrolmentId}
	</delete>
	
	<!-- 성적등록메뉴, 교수 번호로 담당 강의 조회 -->
	<select id="selectLectureListWithProfNo" resultMap="lecture">
		SELECT LEC_ID, LEC_NAME FROM LECTURE WHERE PROF_NO = #{profNo}
	</select>
	
	<!-- 성적등록 강의 선택시 나오는 학생 목록 ksj -->
	<!-- 트리거가 되면 stu_Grade에서 학번, 이름, 성적 조회하면 되는데 -->
	<select id="selectStuNoForRegStuGrade" resultMap="enrolment">
		SELECT STU_NO,
			   ENROLMENT_ID,
			   LEC_ID
		FROM ENROLMENT 
		WHERE LEC_ID = #{lecId}
	</select>
			
</mapper>












