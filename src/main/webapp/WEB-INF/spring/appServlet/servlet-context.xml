<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
	
	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven />

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
	<resources mapping="/resources/**" location="/resources/" />

	<!-- 타일즈 설정 -->
	<beans:bean id="tilesConfigurer" class="org.springframework.web.servlet.view.tiles3.TilesConfigurer">
	    <beans:property name="definitions">
	        <beans:list>
	            <beans:value>classpath:tiles-config.xml</beans:value>
	        </beans:list>
	    </beans:property>
	</beans:bean>
	
	<beans:bean id="tilesViewResolver" class="org.springframework.web.servlet.view.UrlBasedViewResolver">
        <beans:property name="viewClass" value="org.springframework.web.servlet.view.tiles3.TilesView" />
        <beans:property name="order" value="1" />
    </beans:bean>

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
	<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
		<beans:property name="order" value="2" />
	</beans:bean>
	
	<!-- Interceptor -->
	<beans:bean id="loginInterceptor" class="com.kh.project.common.util.LoginInterceptor"></beans:bean>

	<interceptors>
		<interceptor>
			<mapping path="/*/*"/>
			<exclude-mapping path="/*/*Ajax"/>
			<exclude-mapping path="/portal/loginJsp"/>
			<exclude-mapping path="/portal/login"/>
			<exclude-mapping path="/portal/sendMail"/>
			<beans:ref bean="loginInterceptor"/>
		</interceptor>
	</interceptors>
	
	<context:component-scan base-package="com.kh.project.*.controller" />
	
	<!-- interceptor 객체를 생성 수현-->
	<beans:bean id="lectureInterceptor" class="com.kh.project.common.util.LectureInterceptor"></beans:bean>
	
	<!-- interceptor가 실행될 요청 경로를 지정  -->
	<interceptors>
		<interceptor>
			<mapping path="/lecture/goRegLecture"/><!-- 이 경로로 갈때 검문소를 설치할것이다 -->
			<mapping path="/lecture/updateLectureForm"/><!-- 이 경로로 갈때 검문소를 설치할것이다 -->
		<!-- 	<mapping path="/*/*"/>모든 경로에 검문소 설치
			<exclude-mapping path="/board/login"/>여기는 검문소 설치 안할것 -->
			
			<beans:ref bean="lectureInterceptor"/> <!-- 위에서 만든 loginInterceptor객체를 쓸것이다 -->
		</interceptor>
	</interceptors>
	
</beans:beans>
